---
# tasks file for conesphere.debian_kickoff
- name: mount kickoff floppy
  args:
    executable: /bin/bash
  shell: |
    mount /media/fd0
- name: load kvm_machine config from floppy
  include_vars:
    file: /media/fd0/kickoff.yml
    name: kvm_machine
- name: umount kickoff floppy
  args:
    executable: /bin/bash
  shell: |
    umount /media/fd0
- template:
   dest: "/etc/hostname"
   src: templates/etc-hostname.j2
   owner: root
   group: root
   mode: "0644"
- file:
   path: "/root/.ssh"
   state: directory
   owner: root
   group: root
   mode: "0700"
- template:
   dest: "/root/.ssh/authorized_keys"
   src: templates/root-.ssh-authorized_keys.j2
   owner: root
   group: root
   mode: "0644"
- template:
   dest: "/etc/network/interfaces"
   src: templates/etc-network-interfaces.j2
   owner: root
   group: root
   mode: "0644"
- name: resize btrfs filesystem to maximum
  args:
    executable: /bin/bash
  shell: |
    btrfs filesystem resize max / || exit $?
  when: "'image_volsize' in kvm_machine"
- name: replace ssh host keys 
  args:
    executable: /bin/bash
  shell: |
    if [[ ! -f "/etc/ssh/sshd_config" ]]
    then
      echo "Can't open sshd_config" 
      exit 1
    fi
    grep -e "^HostKey " "/sshd_config" | (
      while read hostkey keyfile foo 
      do
        keyname=${keyfile##*/}
        IFS="_" read t1 t2 keytype t3 <<< "${keyname}"
        if [[ -f "/etc/ssh/${keyname}" ]]
        then
          rm "/etc/ssh/${keyname}"
        fi
        if [[ -f "/etc/ssh/${keyname}.pub" ]]
        then
          rm "/etc/ssh/${keyname}.pub"
        fi
        ssh-keygen -N '' -t "${keytype}" -f "/etc/ssh/${keyname}"
      done
    )
  notify: restart sshd
- name: drop root password
  lineinfile:
    path: /etc/shadow
    regexp: '^root:'
    line: 'root:!:17311:0:99999:7:::'
- name: Mount up 9p filesystems if any 
  mount:
    path: '/{{ kvm_machine_filesystem.mountpoint }}'
    src: '{{ kvm_machine_filesystem.name }}'
    fstype: 9p
    opts: trans=virtio,rw
    state: mounted
  with_items: "{{ kvm_machine.filesystems|default([]) }}"
  loop_control:
    loop_var: kvm_machine_filesystem
